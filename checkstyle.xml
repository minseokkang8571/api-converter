<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd">

<module name = "Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="error"/>
    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- 소스 코드에 탭 문자가 존재하는지 확인 -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <module name="TreeWalker">
        <!-- Class는 동일한 이름의 .java 파일이 존재해야 함 -->
        <module name="OuterTypeFilename"/>

        <!-- Token이 지정된 패턴과 일치해야 함 -->
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format" value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <!--<properties name="message" value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>-->
            <property name="message" value="8진수 값 또는 유니코드 이스케이프 값 대신 특수 이스케이프 시퀀스를 사용하는 것을 고려하십시오."/>
        </module>

        <!-- 유니코드 문자의 Escape를 제한함-->
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>

        <module name="OneTopLevelClass"/>
        <module name="NoLineWrap"/>
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module name="NeedBraces"/>
        <module name="LeftCurly"/>
        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone"/>
            <property name="option" value="alone"/>
            <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT"/>
            <message key="line.alone" value="{1}행에 있는 ''{0}''은(는) 새로운 행에서 시작해야 합니다."/>
        </module>
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <!--            <message key="ws.notFollowed"
                                 value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>-->
            <message key="ws.notFollowed"
                     value="WhitespaceAround: ''{0}'' 뒤에 공백이 없습니다. 빈 블록 '{}'은 다중블럭문이 아닐 경우에만 가능합니다."/>
            <!--            <message key="ws.notPreceded"
                                 value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>-->
            <message key="ws.notPreceded"
                     value="WhitespaceAround: ''{0}''앞에 공백이 없습니다."/>
        </module>
        <module name="OneStatementPerLine"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="ArrayTypeStyle"/>
        <module name="MissingSwitchDefault"/>
        <module name="FallThrough"/>
        <module name="UpperEll"/>
        <module name="ModifierOrder"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot"/>
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapComma"/>
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 -->
            <property name="id" value="SeparatorWrapEllipsis"/>
            <property name="tokens" value="ELLIPSIS"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 -->
            <property name="id" value="SeparatorWrapArrayDeclarator"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapMethodRef"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <!--            <message key="name.invalidPattern"
                                 value="Package name ''{0}'' must match pattern ''{1}''."/>-->
            <message key="name.invalidPattern"
                     value="패키지명 ''{0}''은(는) ''{1}''형식이 아닙니다."/>
        </module>
        <module name="TypeName">
            <!--            <message key="name.invalidPattern"
                                 value="Type name ''{0}'' must match pattern ''{1}''."/>-->
            <message key="name.invalidPattern"
                     value="타입명 ''{0}''은(는) ''{1}''형식이 아닙니다."/>
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <!--            <message key="name.invalidPattern"
                                 value="Member name ''{0}'' must match pattern ''{1}''."/>-->
            <message key="name.invalidPattern"
                     value="멤버명 ''{0}''은(는) ''{1}''형식이 아닙니다."/>
            <property name="severity" value="warning"/>
        </module>
        <module name="ParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <!--            <message key="name.invalidPattern"
                                 value="Parameter name ''{0}'' must match pattern ''{1}''."/>-->
            <message key="name.invalidPattern"
                     value="파라미터명 ''{0}''은(는) ''{1}''형식이 아닙니다."/>
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <!--            <message key="name.invalidPattern"
                                 value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>-->
            <message key="name.invalidPattern"
                     value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="LocalVariableName">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <!--            <message key="name.invalidPattern"
                                 value="Local variable name ''{0}'' must match pattern ''{1}''."/>-->
            <message key="name.invalidPattern"
                     value="지역변수명 ''{0}''은(는) ''{1}''형식이 아닙니다."/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <!--            <message key="name.invalidPattern"
                                 value="Class type name ''{0}'' must match pattern ''{1}''."/>-->
            <message key="name.invalidPattern"
                     value="클래스명 ''{0}''은(는) ''{1}''형식이 아닙니다."/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <!--            <message key="name.invalidPattern"
                                 value="Method type name ''{0}'' must match pattern ''{1}''."/>-->
            <message key="name.invalidPattern"
                     value="메소드명 ''{0}''은(는) ''{1}''형식이 아닙니다."/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <!--            <message key="name.invalidPattern"
                                 value="Interface type name ''{0}'' must match pattern ''{1}''."/>-->
            <message key="name.invalidPattern"
                     value="인터페이스명 ''{0}''은(는) ''{1}''형식이 아닙니다."/>
        </module>
        <module name="NoFinalizer"/>
        <module name="GenericWhitespace">
            <!--            <message key="ws.followed"
                                 value="GenericWhitespace ''{0}'' is followed by whitespace."/>-->
            <message key="ws.followed"
                     value="GenericWhitespace ''{0}'' is followed by whitespace."/>
            <!--            <message key="ws.preceded"
                                 value="GenericWhitespace ''{0}''s preceded with whitespace."/>-->
            <message key="ws.illegalFollow"
                     value="GenericWhitespace ''{0}''s preceded with whitespace."/>
            <!--            <message key="ws.illegalFollow"
                                 value="GenericWhitespace ''{0}'' should followed by whitespace."/>-->
            <message key="ws.illegalFollow"
                     value="GenericWhitespace ''{0}'' should followed by whitespace."/>
            <!--            <message key="ws.notPreceded"
                                 value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>-->
            <message key="ws.notPreceded"
                     value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module>
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="8"/>
            <property name="lineWrappingIndentation" value="8"/>
            <property name="arrayInitIndent" value="4"/>
        </module>
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="false"/>
            <property name="allowedAbbreviationLength" value="1"/>
        </module>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="VariableDeclarationUsageDistance"/>

        <module name="MethodParamPad"/>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF"/>
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="ParenPad"/>
        <module name="OperatorWrap">
            <property name="option" value="NL"/>
            <property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, QUESTION, SL, SR, STAR, METHOD_REF "/>
        </module>
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationMostCases"/>
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationVariables"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
            <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <!--            <message key="name.invalidPattern"
                                 value="Method name ''{0}'' must match pattern ''{1}''."/>-->
            <message key="name.invalidPattern"
                     value="메소드명 ''{0}''은(는) ''{1}''형식과 일치하지 않습니다."/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
        </module>
        <module name="CommentsIndentation"/>
    </module>
</module>
